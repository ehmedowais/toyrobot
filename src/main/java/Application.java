import com.ows.dto.GameDTO;
import com.ows.exception.RobotSimulatorException;
import com.ows.modal.enums.Command;
import com.ows.service.RobotSimulator;

import java.util.Optional;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

import static com.ows.constants.ApplicationConstants.BYE;
import static com.ows.constants.ApplicationConstants.INVALID_COMMAND;
import static com.ows.constants.ApplicationConstants.INVALID_NO_OF_ARGS;

/*
 * This Java source file was auto generated by running 'gradle buildInit --type java-library'
 * by 'muhammadahmed' at '14/06/21 1:49 PM' with Gradle 2.14-rc-5
 *
 * @author muhammadahmed, @date 14/06/21 1:49 PM
 */
public class Application {

    private static Logger LOGGER = Logger.getLogger(Application.class.getName());

    public static void main(String... args) {
        System.out.println("Enter a command from below phrases");
        System.out.println("PLACE X,Y,EAST, WEST, NORTH, SOUTH\nMOVE, LEFT, RIGHT, REPORT or EXIT");
        boolean shouldLeave = false;
        Scanner scanner = new Scanner(System.in);
        String nextLine;
        RobotSimulator simulator = new RobotSimulator();
        while (scanner.hasNextLine()) {
            nextLine = scanner.nextLine();
            if (nextLine.equals("EXIT")) {
                System.out.println(BYE);
                break;
            }
            Optional<GameDTO> dto;
            try {
                dto = setDTOIfCommandLineValid(nextLine);
                if (dto.isPresent()) {
                    String result = simulator.simulate(dto.get());
                    if(Command.REPORT.equals(dto.get().getCommand())) {
                        System.out.println("OUTPUT: "+result);
                    }
                }
            } catch (Exception ex) {
                System.err.println(ex.getMessage());
            }

        }
    }

    public static Optional<GameDTO> setDTOIfCommandLineValid(String commandLine) {
        GameDTO gameDTO = null;
        if (commandLine == null || commandLine.trim().length() == 0) {
            System.out.println(INVALID_COMMAND);
            return Optional.ofNullable(gameDTO);
        }
        String[] arguments = commandLine.split(" ");
        Command command;
        try {
            command = Command.valueOf(arguments[0]);
        } catch (IllegalArgumentException ex) {
            System.out.println(INVALID_COMMAND);
            throw new RobotSimulatorException(ex.getMessage());
        }
        if (command.equals(Command.PLACE) && arguments.length < 2) {
            System.out.println(INVALID_COMMAND);
            throw new RobotSimulatorException(INVALID_NO_OF_ARGS);
        }
        gameDTO = new GameDTO();
        gameDTO.setCommand(command);
        if (command.equals(Command.PLACE)) {
            gameDTO.setPositionAndDirectionForPlaceCommand(arguments[1]);
        }
        return Optional.of(gameDTO);
    }

}
